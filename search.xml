<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>html+css常记</title>
      <link href="/xy_ang/2020/10/12/html-css-chang-ji/"/>
      <url>/xy_ang/2020/10/12/html-css-chang-ji/</url>
      
        <content type="html"><![CDATA[<h1 id="1-HTML"><a href="#1-HTML" class="headerlink" title="1.HTML"></a>1.HTML</h1><h4 id="基本标签"><a href="#基本标签" class="headerlink" title="基本标签"></a>基本标签</h4><ol><li><p>DOCTYPE 用于说明一个规范</p></li><li><p>meta 描述性标签，用于说明</p></li><li><p>段落标签<code>&lt;p&gt;&lt;/p&gt;</code></p></li><li><p>换行标签<code>&lt;br/&gt;</code></p></li><li><p>水平线标签<code>&lt;hr/&gt;</code></p></li><li><p>粗体<code>&lt;strong&gt;&lt;/strong&gt;</code></p></li><li><p>斜体<code>&lt;em&gt;&lt;/em&gt;</code></p></li><li><p>特殊符号：<code>&amp;nbsp；</code></p></li><li><p>大于号<code>&amp;gt；</code>        小于号<code>&amp;lt；</code></p></li><li><p>版权<code>&amp;copy ;</code></p></li><li><p>注释<code>&lt;!--  --&gt;</code></p></li><li><p>图像标签<code>&lt;img src="" alt=""  title=""&gt;</code></p></li><li><p>超链接<code>&lt;a href="" target=""&gt;&lt;/a&gt; </code>  target的参数 在本身页面打开：<code>_self</code> ,在新的页面打开：<code>_blank</code></p><ol><li>锚链接 1.需要一个标记 2.跳转到标记</li><li>功能性链接 邮箱链接<code>&lt;a href="mailto:youxiang"&gt;&lt;/a&gt;</code></li></ol></li><li><p>块元素 无论内容多少独占一行</p></li><li><p>行内元素 左右的行内元素可以排在一起</p></li><li><p>列表</p><ol><li><p>有序列表 </p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ol</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ol</span><span class="token punctuation">></span></span></code></pre></li><li><p>有序列表</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span></code></pre></li><li><p>自定义列表</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dl</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dt</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dt</span><span class="token punctuation">></span></span> 列表标签    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dd</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dd</span><span class="token punctuation">></span></span> 名称<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dl</span><span class="token punctuation">></span></span></code></pre></li></ol></li><li><p>表格 table  行tr  rows  列td</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">></span></span>  </code></pre></li><li><p>视频标签 <code>&lt;video src="" controls autoplay&gt;&lt;/video&gt;</code></p></li><li><p>音频<code>&lt;audio src="" controls autoplay&gt;&lt;/audio&gt;</code></p></li><li><p>内联框架<code>&lt;iframe src=""&gt;&lt;/iframe&gt;</code></p></li><li><p>表单</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span></code></pre></li><li><p>input标签</p><pre class=" language-html"><code class="language-html"><span class="token comment" spellcheck="true">&lt;!--type参数radio单选框 注意name需要设置一致成为一组type参数checkbox多选框 也需要name一致，成为一组submit 提交reset 重置file 文件域--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">tpye</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                           </code></pre></li><li><p>下拉框select</p><pre class=" language-html"><code class="language-html">  国家：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>中国<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">selected</span><span class="token punctuation">></span></span>瑞士<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>美国<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">></span></span></code></pre></li><li><p>文本域<code>textarea</code></p></li><li><p>表单的应用 ：disable 禁用  hidden 隐藏 readonly 只读</p></li><li><p>placeholder 提示信息  require非空判断  pattern正则表达式验证</p></li></ol><h1 id="2-CSS"><a href="#2-CSS" class="headerlink" title="2.CSS"></a>2.CSS</h1><p>1.css的导入方式：</p><ul><li>行内</li><li>内部</li><li>外部<code>link</code></li><li>优先级：就近原则</li></ul><p>2.选择器的类型</p><ul><li>标签选择器</li><li>类选择器           <code>.类的名称</code></li><li>id选择器            <code>#id的名称</code></li><li>优先级： id选择器&gt;类选择器&gt;标签选择器</li></ul><p>3.层次选择器</p><ul><li>后代选择器 空格</li><li>子选择器  &gt;   一代(儿子)</li><li>相邻兄弟选择器  +   只有一个(相邻即向下)</li><li>通用选择器  ~  当前选中元素的所有兄弟元素</li></ul><p>4.结构伪类选择器 <code>：例如，a:hover</code></p><p>5.属性选择器</p><pre class=" language-html"><code class="language-html">例如，a[id=xx]即标签[属性]=绝对等于*=包含^=以xx开头$=以xx结尾</code></pre><h4 id="页面美化"><a href="#页面美化" class="headerlink" title="页面美化"></a>页面美化</h4><pre class=" language-html"><code class="language-html">font-size   字体大小font-family 字体类型font-weigth 字体粗细    bolder字体加粗line-height 行高        注意：行高和块的高度一致则文字居中text-align  排版居中text-indent 缩进 vertical-align：middle 文本图片水平对齐border:粗细 样式 颜色边框 margin padding border-radius 都是顺时针display  行内inline 块状block 块状行内inline-blockfloat 浮动clear both 两侧不允许浮动overflowposition relative相对定位  absolute绝对定位 注意：没有父级元素被定为则相对于浏览器，有则相对于父级        fixed固定定位z-index 图层opacity 透明度</code></pre>]]></content>
      
      
      <categories>
          
          <category> 随笔录丶 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> H5 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据库记载</title>
      <link href="/xy_ang/2020/10/12/mysql-ji-zai/"/>
      <url>/xy_ang/2020/10/12/mysql-ji-zai/</url>
      
        <content type="html"><![CDATA[<h1 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h1><h2 id="1-1-数据库简介"><a href="#1-1-数据库简介" class="headerlink" title="1.1.数据库简介"></a>1.1.数据库简介</h2><p>1.数据库 DB</p><p>2.数据库管理系统 DBMS</p><h2 id="1-2-数据库分类"><a href="#1-2-数据库分类" class="headerlink" title="1.2.数据库分类"></a>1.2.数据库分类</h2><p>1.关系数据库(SQL) SQL Oracle</p><p>2.非关系数据库(No SQL 即Not only)  redis MongDB</p><h2 id="1-3-Mysql常用"><a href="#1-3-Mysql常用" class="headerlink" title="1.3.Mysql常用"></a>1.3.Mysql常用</h2><p>启动mysql服务 net start mysql</p><p>关闭mysql服务 net start mysql</p><p>连接mysql mysql -u root -p密码  注意-p后面无空格</p><h4 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h4><p>show databases；                      查看数据库</p><p>use 数据库名；                    使用数据库</p><p>show tables；                                 查看数据库中的表</p><p>describe 表名；                 查看表结构</p><p>SQL注释: 单行注释 –   多行注释/* */</p><pre class=" language-mysql"><code class="language-mysql">#查看创建数据库语句SHOW CREATE DATABASE `school`#查看创建表的定义语句SHOW CREATE TABLE `xscj`#查看表结构DESC xscj</code></pre><h4 id="数据库语言"><a href="#数据库语言" class="headerlink" title="数据库语言"></a>数据库语言</h4><p>DDL 定义 define</p><p>DML 操作 manager</p><p>DQL 查询 query</p><p>DCL 控制 control</p><p>CRUD增删改查 </p><h4 id="操作数据库（了解）"><a href="#操作数据库（了解）" class="headerlink" title="操作数据库（了解）"></a>操作数据库（了解）</h4><p>操作数据库&gt;操作数据库的表&gt;操作数据库表中的数据</p><p>SQL语句不区分大小写</p><p>1.创建数据库</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">CREATE</span> <span class="token keyword">DATABASE</span>  <span class="token punctuation">[</span><span class="token keyword">IF</span> <span class="token operator">NOT</span> <span class="token keyword">EXISTS</span><span class="token punctuation">]</span> web</code></pre><p>2.删除数据库</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">DROP</span> <span class="token keyword">DATABASE</span>  <span class="token keyword">IF</span> <span class="token keyword">EXISTS</span> web</code></pre><p>3.使用数据库</p><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- 如果表明或者字段名是一个特殊字符，就需要带``</span><span class="token keyword">USE</span> <span class="token punctuation">`</span>web<span class="token punctuation">`</span></code></pre><p>4.查看所有数据库</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">SHOW</span> <span class="token keyword">DATABASES</span></code></pre><h4 id="数据库的列类型"><a href="#数据库的列类型" class="headerlink" title="数据库的列类型"></a>数据库的列类型</h4><blockquote><p>数值</p></blockquote><p>常用：</p><ul><li>int </li><li>float</li><li>double</li><li>decimal 字符串形式的浮点数 金融计算</li></ul><blockquote><p>字符串</p></blockquote><p>常用：</p><ul><li>char 字符串固定大小 0~255</li><li>varchar 可变字符串 0~65355  对应java中的String</li><li>text 文本串 2^16-1  保存大文本</li></ul><blockquote><p>时间如期</p></blockquote><p>常用：</p><ul><li>date               YYYY-MM-DD</li><li>time               HH：mm：ss</li><li>**datetime     YYYY-MM-DD  HH：mm：ss  **   最常用</li><li><strong>timestamp 时间戳 1970.1.1到现在的毫秒数</strong></li><li>year 年份</li></ul><blockquote><p>null</p></blockquote><ul><li>没有值</li><li><strong>注意：不要使用NULL进行运算，结果为NULL</strong></li></ul><h4 id="数据库的字段属性"><a href="#数据库的字段属性" class="headerlink" title="数据库的字段属性"></a>数据库的字段属性</h4><blockquote><p>Unsigned</p></blockquote><ul><li>无符号的整数</li><li>声明了该列不能为负数</li></ul><blockquote><p>zerofill</p></blockquote><ul><li>0填充</li><li>不足的位数，使用填充 例如,int(4)       0001</li></ul><blockquote><p>自增</p></blockquote><ul><li>自动在上一条记录的基础上+1</li><li>通常涉及唯一主键~index ，必须是整数类型</li><li>可以自定义设计主键自增的起始值和步长</li></ul><blockquote><p>NULL not null</p></blockquote><ul><li>假设设置为not null，如果不给它赋值，就会报错!</li><li>NULL,如果不填写，默认就是null！</li></ul><blockquote><p>默认</p></blockquote><ul><li>设置默认的值</li></ul><h4 id="创建数据库表"><a href="#创建数据库表" class="headerlink" title="创建数据库表"></a>创建数据库表</h4><pre class=" language-mysql"><code class="language-mysql">-- AUTO_INCREMENT 自增-- ENGINE 引擎，即表的类型-- COMMENT 注释-- PRIMARY KEY 主键-- CHARSET 字符集CREATE TABLE IF NOT EXISTS `student`(    `id` INT(16) NOT NULL AUTO_INCREMENT COMMENT '学号',    `name` VARCHAR(32) NOT NULL DEFAULT '匿名' COMMENT '用户名',    `pwd` VARCHAR(32) NOT NULL DEFAULT '123456' COMMENT '密码',    `sex` VARCHAR(4) NOT NULL DEFAULT '女' COMMENT '性别',    `birthday` DATETIME DEFAULT NULL COMMENT '出生日期',    `address` VARCHAR(32) DEFAULT NULL COMMENT '地址',    `email` VARCHAR(32) DEFAULT NULL COMMENT '邮箱',    PRIMARY KEY(`id`))ENGINE=INNODB DEFAULT CHARSET=utf8</code></pre><p>格式：</p><pre class=" language-mysql"><code class="language-mysql">create table [IF NOT EXISTS] `表名称`（    `字段名` 列类型 [属性][索引][注释]，    `字段名` 列类型 [属性][索引][注释]，    ......    `字段名` 列类型 [属性][索引][注释]）[表类型][表的字符集]</code></pre><h4 id="修改数据库表"><a href="#修改数据库表" class="headerlink" title="修改数据库表"></a>修改数据库表</h4><pre class=" language-mysql"><code class="language-mysql">#修改表名称:alter table 旧表名 rename as 新表名 ALTER TABLE student RENAME AS teacher#增加表的字段:ALTER TABLE 表名 add 字段名 列属性ALTER TABLE teacher ADD color VARCHAR(16)#修改表的字段(重命名，修改约束)--修改约束:alter table 表名 modify 字段名 列属性ALTER TABLE teacher MODIFY color INT(16) --修改约束--修改字段名 alter table 表名 change 旧字段名 新字段名 列属性ALTER TABLE teacher CHANGE color color1 INT(16) --字段重命名#删除表的字段 alter table 表名 drop 字段名ALTER TABLE teacher DROP color1</code></pre><h4 id="删除数据库表"><a href="#删除数据库表" class="headerlink" title="删除数据库表"></a>删除数据库表</h4><pre class=" language-mysql"><code class="language-mysql"> DROP TABLE IF EXISTS teacher -- 格式：drop table[if exists] 表名   直接删除表结构</code></pre><h2 id="1-4-MYSQL的数据管理"><a href="#1-4-MYSQL的数据管理" class="headerlink" title="1.4.MYSQL的数据管理"></a>1.4.MYSQL的数据管理</h2><h4 id="外键-了解"><a href="#外键-了解" class="headerlink" title="外键(了解)"></a>外键(了解)</h4><blockquote><p>第一种方式</p></blockquote><pre class=" language-mysql"><code class="language-mysql">CREATE TABLE IF NOT EXISTS stu_grade(    `gradeid` INT(32) NOT NULL AUTO_INCREMENT COMMENT '年级id',    `gradename` VARCHAR(32) DEFAULT NULL COMMENT '班级',    PRIMARY KEY(`gradeid`))ENGINE=INNODB DEFAULT CHARSET=utf8-- FORGIEN KEY 外键-- CONSTRAINT 约束-- REFERENCES 引用CREATE TABLE `sutdent` (  `id` int(16) NOT NULL AUTO_INCREMENT COMMENT '学生学号',  `name` varchar(32) DEFAULT NULL COMMENT '学生姓名',  `sex` varchar(16) DEFAULT NULL COMMENT '学生性别',  `grade` varchar(32) DEFAULT NULL COMMENT '学生年级',  `gradeid` int(32) DEFAULT NULL COMMENT '外键',  PRIMARY KEY (`id`),  KEY `FK_gradeid` (`gradeid`),  CONSTRAINT `FK_gradeid` FOREIGN KEY (`gradeid`) REFERENCES `stu_grade` (`gradeid`)) ENGINE=InnoDB DEFAULT CHARSET=utf8</code></pre><blockquote><p>第二种方式</p></blockquote><pre class=" language-mysql"><code class="language-mysql">ALTER TABLE `sutdent`ADD CONSTRAINT `FK_gradeid` FOREIGN KEY(`gradeid`) REFERENCES `stu_grade`(`gradeid`);######格式：-- alter table 表名 add constraint 约束名 foreign key(作为外键的字段名) references 哪个表名(字段名)</code></pre><p><strong>注意：</strong></p><p><strong>定义外键的时候两个字段的类型或者大小要严格匹配</strong></p><p><strong>当一个表具有外键时，插入数据需要先想向外键关联的表中插入数据，再向本表中插入数据</strong></p><h4 id="DML语言-全部记住"><a href="#DML语言-全部记住" class="headerlink" title="DML语言(全部记住)"></a>DML语言(全部记住)</h4><p>数据操作语言</p><ul><li>insert</li><li>update</li><li>delete</li></ul><h4 id="插入"><a href="#插入" class="headerlink" title="插入"></a>插入</h4><pre class=" language-mysql"><code class="language-mysql">-- 插入单行数据INSERT INTO `student`(id,`name`,sex,grade) VALUES(4,'hs','男','1')；-- 插入多行数据INSERT INTO `student`(id,`name`,sex,grade) VALUES(4,'hs','男','1'),(6,'SH','男','2')，......(20,'rb'，'女'，'10')；#########################格式：#插入单行：insert into 表名[字段名] values(值1，值2，值3......);#插入多行：insert into 表名[字段名]values(值1，值2，值3......)，(值1，值2，值3......)，......;</code></pre><h4 id="修改"><a href="#修改" class="headerlink" title="修改"></a>修改</h4><pre class=" language-mysql"><code class="language-mysql">UPDATE `student` SET `name`='zhangsan ', sex='女' WHERE id<>5;#格式：#update 表名 set colnum_name1=value，[colnum_name2=value，......] where [条件]</code></pre><p>where后的条件：</p><table><thead><tr><th align="center">操作符</th><th align="center">含义</th></tr></thead><tbody><tr><td align="center">=</td><td align="center"></td></tr><tr><td align="center">&lt;&gt;或者!=</td><td align="center">不等于</td></tr><tr><td align="center">&lt;</td><td align="center"></td></tr><tr><td align="center">&gt;</td><td align="center"></td></tr><tr><td align="center">&lt;=</td><td align="center"></td></tr><tr><td align="center">&gt;=</td><td align="center"></td></tr><tr><td align="center">between…and…</td><td align="center">[…,…]</td></tr><tr><td align="center">and</td><td align="center">&amp;&amp;和</td></tr><tr><td align="center">or</td><td align="center">||或</td></tr><tr><td align="center">not</td><td align="center">where not 取反</td></tr></tbody></table><h4 id="删除"><a href="#删除" class="headerlink" title="删除"></a>删除</h4><pre class=" language-mysql"><code class="language-mysql">##删除的是表的内容DELETE FROM `student` WHERE id=4#格式delete from 表名 where[条件]TRUNCATE `student`#truncate 命令 作用：完全清空一个数据库表，表的结构和索引约束不会变</code></pre><p>delete 和 truncate 的区别</p><ul><li>相同点：都能删除数据，都不会删除表的结构</li><li>不同点：<ul><li>truncate 重新设置自增列 计数器归零</li><li>truncate 不会影响事物</li></ul></li></ul><h2 id="1-5-DQL数据库查询语言-重点"><a href="#1-5-DQL数据库查询语言-重点" class="headerlink" title="1.5.DQL数据库查询语言(重点)"></a>1.5.DQL数据库查询语言(重点)</h2><h4 id="1-起别名"><a href="#1-起别名" class="headerlink" title="1.起别名"></a>1.起别名</h4><pre class=" language-mysql"><code class="language-mysql">SELECT studentno AS 学号,studentname AS 姓名 FROM `student`-- 格式属性 ad 别名   表名 as 别名-- 函数 caoncat(a,b) 连接a，bSELECT CONCAT('姓名:',studentname) AS 姓名 FROM `student`</code></pre><p> <img src="https://gitee.com/xy_ang/picgo_images/raw/master/20201012104707.png"></p><blockquote><p>去重 DISTINCT</p></blockquote><pre class=" language-mysql"><code class="language-mysql">SELECT DISTINCT `studentno` AS 学号 FROM result-- 查询版本号SELECT VERSION()-- 数据库中的列表达式SELECT 3*100-20 AS 结果SELECT DISTINCT `studentno`, `studentresult`+1 AS 新成绩 FROM result-- 格式: select 表达式 from 表-- 表达式：文本值，列，null，函数，计算表达式，系统变量......</code></pre><blockquote><p>where</p></blockquote><pre class=" language-mysql"><code class="language-mysql">-- 查询课程编号不等于1的学时SELECT `subjectno`,`classhour` AS 学时 FROM `subjecT`WHERE NOT `subjectno`=1 </code></pre><table><thead><tr><th align="center">运算符</th><th align="center">含义</th></tr></thead><tbody><tr><td align="center">is null</td><td align="center"></td></tr><tr><td align="center">is not null</td><td align="center"></td></tr><tr><td align="center">between</td><td align="center"></td></tr><tr><td align="center"><strong>like</strong></td><td align="center">匹配</td></tr><tr><td align="center"><strong>in</strong></td><td align="center">包含</td></tr></tbody></table><pre class=" language-mysql"><code class="language-mysql">-- %匹配0~任意字符  _匹配一个字符 ，模糊查询SELECT `studentname` FROM student WHERE `studentname` LIKE '张_'SELECT `studentname` FROM student WHERE `studentname` LIKE '%照%'-- 包含关系，精准匹配SELECT `studentname` FROM student WHERE studentname IN ('张伟','赵强')</code></pre><h4 id="2-联表查询"><a href="#2-联表查询" class="headerlink" title="2.联表查询"></a>2.联表查询</h4><p> <img src="https://gitee.com/xy_ang/picgo_images/raw/master/20201012104708.png"></p><pre class=" language-mysql"><code class="language-mysql">-- where 等值判断-- join on 连接查询--join 连接的表 on 条件判断-- inner join-- on后跟连接条件SELECT s.studentno,studentname,subjectno,studentresultFROM student AS sINNER JOIN result AS rON s.studentno=r.studentno-- 右查询SELECT s.studentno,studentname,subjectno,studentresultFROM student AS sRIGHT JOIN result AS rON s.studentno=r.studentno-- 左查询SELECT s.studentno,studentname,subjectno,studentresultFROM student AS sLEFT JOIN result AS rON s.studentno=r.studentno</code></pre><p>区别：</p><table><thead><tr><th align="center">操作</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">inner join</td><td align="center">如果表中至少有一个匹配，就返回</td></tr><tr><td align="center">left join</td><td align="center">会从左表中返回所有的值，即使右表中没有匹配</td></tr><tr><td align="center">right join</td><td align="center">会从右表中返回所有的值，即使左表中没有匹配</td></tr></tbody></table><pre class=" language-mysql"><code class="language-mysql">SELECT s.studentno,studentname,`subjectname`,studentresultFROM student sRIGHT JOIN `result` rON s.studentno=r.`result`INNER JOIN `subject` subON sub.subjectno=r.subjectno</code></pre><h4 id="3-自连接-了解"><a href="#3-自连接-了解" class="headerlink" title="3.自连接(了解)"></a>3.自连接(了解)</h4><p>自己的表和自己的表连接，核心：一张表拆为2张一样的表即可</p><pre class=" language-mysql"><code class="language-mysql">SELECT m.categoryname 父, n.categoryname 子FROM category m, category nWHERE m.categoryid= n.pid</code></pre><p>4.分页和排序</p><pre class=" language-mysql"><code class="language-mysql">-- 排序 order by      DESC 降序 ASC 升序SELECT studentresult FROM result ORDER BY studentresult DESC------------------------------------------------ 分页 limit 起始值，pagesize页面大小SELECT studentresult FROM result ORDER BY studentresult DESCLIMIT 0,5 -- 第一页  limit 0,5         (1-1)*5-- 第二页  limit 5,5         (2-1)*5-- 第三页  limit 10,5        (3-1)*5-- 第N页   limit (N-1)*5,5   (N-1)*5   即(N-1)*pagesize -- 数据总数/页面大小=总页数</code></pre><h4 id="4-函数"><a href="#4-函数" class="headerlink" title="4.函数"></a>4.函数</h4><p>1.常用函数(不常用)</p><pre class=" language-mysql"><code class="language-mysql">current_date() -- 获取当前的日期now() -- 获取当前时间rand() -- 0-1间的随机数ceilling() -- 向上取整floor() -- 向下取整</code></pre><p>2.聚合函数(常用)</p><table><thead><tr><th align="center">函数名称</th><th align="center">含义</th></tr></thead><tbody><tr><td align="center">count()</td><td align="center">计数</td></tr><tr><td align="center">sum()</td><td align="center">求和</td></tr><tr><td align="center">avg()</td><td align="center">平均数</td></tr><tr><td align="center">max()</td><td align="center">最大值</td></tr><tr><td align="center">min()</td><td align="center">最小值</td></tr></tbody></table><pre class=" language-mysql"><code class="language-mysql">-- 查询表中有多少个记录SELECT COUNT(*) FROM student; -- 不忽略null值 本质 行数SELECT COUNT(1) FROM student; -- 不忽略null值 本质 行数SELECT COUNT(studentname) FROM student; -- count(字段名) 会忽略null值-- 分组-- group by-- having 条件判断 用于聚合函数中</code></pre><h4 id="3-加密"><a href="#3-加密" class="headerlink" title="3.加密"></a>3.加密</h4><pre class=" language-mysql"><code class="language-mysql">-- MD5() 加密</code></pre><h2 id="1-6-事务-transaction"><a href="#1-6-事务-transaction" class="headerlink" title="1.6.事务 transaction"></a>1.6.事务 transaction</h2><blockquote><p>事务原则：ACID 原子性 一致性 隔离性 持久性</p></blockquote><p><strong>原子性</strong></p><p>要么都成功，要么都失败</p><p><strong>一致性</strong></p><p>事务前后数据的完整性要保持一致</p><p><strong>隔离性</strong></p><p>多个用户并发访问数据库时，数据库为每一个用户开启的事务，不能被其他事务的操作数据干扰，事务之间有隔离</p><p><strong>持久性</strong></p><p>事务一旦提交不可逆，被持久化到数据库中</p><pre class=" language-mysql"><code class="language-mysql">-- 模拟事务:转账SET autocommit=0; -- 关闭自动提交START TRANSACTION -- 开启一个事务UPDATE account SET money=money-100 WHERE `name`='张三';UPDATE account SET money=money+100 WHERE `name`='李四';COMMIT;ROLLBACK;SET autocommit=1; -- 开启自动提交</code></pre><p><strong>隔离性造成的问题：</strong></p><p>脏读：一个事务读取了另一个没有提交的事务</p><p>不可重复读：在同一个事务内，重复读取表中的数据，表数据发生了改变</p><p>虚读(幻读)：在一个事务内，读取到别人插入的数据，导致前后读出来的结果不一致</p><h2 id="1-7-索引"><a href="#1-7-索引" class="headerlink" title="1.7.索引"></a>1.7.索引</h2><p><strong>索引是帮助Mysql高效获取数据的数据结构</strong></p><h4 id="1-索引的分类"><a href="#1-索引的分类" class="headerlink" title="1.索引的分类"></a>1.索引的分类</h4><blockquote><p>主键索引只能有一个，唯一索引可以有多个</p></blockquote><ul><li>主键索引 (primary key)<ul><li>唯一的标识，主键不可重复,只能有一个列作为主键</li></ul></li><li>唯一索引 (unique key)<ul><li>避免重复的列出现，唯一索引可以重复，多个列都可以标识为唯一索引</li></ul></li><li>常规索引 (key/index)<ul><li>默认的 index/key关键字来设置</li></ul></li><li>全文索引 (fullText)<ul><li>在特定的数据库引擎下才有</li><li>快速定位数据</li></ul></li></ul><pre class=" language-mysql"><code class="language-mysql">-- 显示所有的索引信息 SHOW INDEX FROM student-- 增加一个全文索引(索引名) 列名ALTER TABLE school.`student` ADD INDEX `studentname`(`studentname`)-- EXPLAIN 分析sql的执行状况EXPLAIN SELECT * FROM student-- 增加索引的-- 索引名一般定义：id_表名_字段名--create index 索引名 on 表(字段)</code></pre><p><strong>索引在小数据的时候用处不大，在大数据的时候能够体现出来</strong></p><blockquote><p>索引的数据结构</p><p>Hash 类型的索引</p><p>Btree：InnoDB的默认数据结构~</p></blockquote><h2 id="1-8-权限管理和备份"><a href="#1-8-权限管理和备份" class="headerlink" title="1.8.权限管理和备份"></a>1.8.权限管理和备份</h2><pre class=" language-mysql"><code class="language-mysql">-- 创建用户 create user 用户名 IDENTIFIED BY 密码CREATE USER hs IDENTIFIED BY '123456'-- 修改密码(修改当前用户的密码)SET PASSWORD = PASSWORD('zyh...1999')-- 修改密码(修改其他用户的密码)SET PASSWORD FOR hs=PASSWORD('zyh...1999')-- 给用户重命名 rename user 旧用户名 to 新用户名RENAME USER hs TO hs2-- 用户授权 all privileges 全部权限-- all privileges 除了给别人授权，其他都可以干-- *.* 所有的表  GRANT ALL PRIVILEGES ON *.* TO hs2-- 查询权限SHOW GRANTS FOR hs2-- root用户权限  GRANT PROXY ON ''@'' TO 'root'@'localhost' WITH GRANT OPTIONSHOW GRANTS FOR root@localhost-- 撤销权限 revoke REVOKE ALL PRIVILEGES ON *.* FROM hs2-- 删除用户DROP USER hs2</code></pre><h2 id="1-9-MYSQL备份"><a href="#1-9-MYSQL备份" class="headerlink" title="1.9.MYSQL备份"></a>1.9.MYSQL备份</h2><ul><li><p>直接拷贝物理文件</p></li><li><p>在可视化界面，如sqlyong操作</p></li><li><p>命令行cmd的导入和导出</p></li></ul><pre class=" language-mysql"><code class="language-mysql">-- 导出： mysqldump -h 主机 -u 用户名 -p密码 数据库 > 物理磁盘位置/文件位置#导入：#登录,切换到指定的数据库#source 备份文件#source 文件位置</code></pre><h2 id="2-0-数据库的设计"><a href="#2-0-数据库的设计" class="headerlink" title="2.0.数据库的设计"></a>2.0.数据库的设计</h2><p><strong>当数据库比较复杂时就需要设计</strong></p><p>良好的数据库设计：</p><ul><li>节省内存</li><li>保证数据的完整性</li><li>方便系统的开发</li></ul><p>软件开发中关于数据库的设计，</p><ul><li>分析需求：分析业务和需要处理的数据库的请求</li><li>概要设计：设计关系图E—R图</li></ul><h4 id="三大范式-规范性"><a href="#三大范式-规范性" class="headerlink" title="三大范式(规范性)"></a>三大范式(规范性)</h4><h5 id="第一范式-1NF"><a href="#第一范式-1NF" class="headerlink" title="第一范式(1NF)"></a>第一范式(1NF)</h5><ul><li>原子性：保证每一列不可再分</li></ul><h5 id="第二范式-2NF"><a href="#第二范式-2NF" class="headerlink" title="第二范式(2NF)"></a>第二范式(2NF)</h5><ul><li>前提：满足第一范式</li><li>每张表只描述一件事</li></ul><h5 id="第三范式-3NF"><a href="#第三范式-3NF" class="headerlink" title="第三范式(3NF)"></a>第三范式(3NF)</h5><ul><li>前提：满足第一范式和第二范式</li><li>第三范式需要确保数据表中的每一列数据都和主键直接相关，不能间接相关</li></ul><p><strong>一般关联查询的表不得超过三张</strong></p><ul><li>考虑商业化的需求和目标</li><li>故意给表增加一些冗余字段（从多表查询变为单表查询）</li></ul><p><strong>注意：数据库的性能更加重要，只需要适当考虑规范性</strong></p><h2 id="2-1-JDBC"><a href="#2-1-JDBC" class="headerlink" title="2.1.JDBC"></a>2.1.JDBC</h2><p>java操作数据库的规范，俗称JDBC</p><p><strong>步骤</strong></p><p>1.加载驱动</p><p>2.连接数据库  DriverManager</p><p>3.获得执行的sql的对象  Statement</p><p>4.获得返回的结果集</p><p>5.关闭资源，释放连接</p><ul><li>驱动</li></ul><pre class=" language-java"><code class="language-java">com<span class="token punctuation">.</span>mysql<span class="token punctuation">.</span>jdbc<span class="token punctuation">.</span>Driver</code></pre><ul><li>URL</li></ul><pre class=" language-java"><code class="language-java">jdbc<span class="token operator">:</span>mysql<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>localhost<span class="token operator">:</span><span class="token number">3306</span><span class="token operator">/</span>jdbcstudy<span class="token operator">?</span>useUnicode<span class="token operator">=</span><span class="token boolean">true</span><span class="token operator">&amp;</span>characterEncoding<span class="token operator">=</span>utf8<span class="token operator">&amp;</span>useSSL<span class="token operator">=</span><span class="token boolean">true</span></code></pre><p><strong>jar包的区别：</strong></p><p><strong>jar 就是一堆.class文件, 源代码编译出来的包, 可以直接运行的</strong></p><p><strong>java&nbsp;doc就是这个源文件中的doc 文档注释, 包括字段, 方法等注释</strong></p><p><strong>sources 就是源代码包</strong> </p><blockquote><pre class=" language-java"><code class="language-java">Connection connection 代表数据库</code></pre></blockquote><blockquote><pre class=" language-java"><code class="language-java">Statement  和  PreparedStatement 执行sql的对象excuteUpdate 返回受影响的行数excuteQuery  返回结果集<span class="token operator">*</span><span class="token operator">*</span>注意<span class="token operator">*</span><span class="token operator">*</span>Statement 存在SQL注入问题，风险高PreparedStatement 防止SQL注入，效率高防止SQL注入的本质：把传递进来的参数当做字符</code></pre></blockquote><h2 id="2-2-数据库连接池"><a href="#2-2-数据库连接池" class="headerlink" title="2.2.数据库连接池"></a>2.2.数据库连接池</h2><p>池化技术：准备一些预先的资源，过来就连接预先准备好的</p><p>最小连接数</p><p>最大连接数</p><p>等待超时</p><p>编写连接池，实现接口DataSource</p><blockquote><p>开源数据源实现</p></blockquote><p>DBCP</p><p>C3P0 </p><p>Druid：阿里巴巴</p><p>使用了数据库连接池，在项目中就不需要编写连接数据库的代码了.</p><p>​    </p>]]></content>
      
      
      <categories>
          
          <category> 随笔录丶 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo个人博客搭建</title>
      <link href="/xy_ang/2020/10/12/hexo-bo-ke-da-jian/"/>
      <url>/xy_ang/2020/10/12/hexo-bo-ke-da-jian/</url>
      
        <content type="html"><![CDATA[<h2 id="个人博客搭建及美化"><a href="#个人博客搭建及美化" class="headerlink" title="个人博客搭建及美化"></a>个人博客搭建及美化</h2><h2 id="1-环境"><a href="#1-环境" class="headerlink" title="1.环境"></a>1.环境</h2><blockquote><p>1.安装 node.js         git       </p></blockquote><p>安装完成后右键打开<code>Git Bash Here</code>  或者cmd 窗口类似于Linux的命令行</p><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true">#检测node.js是否安装成功</span>node -v<span class="token comment" spellcheck="true">#检查 npm</span><span class="token function">npm</span> -v</code></pre><p><img src="https://gitee.com/xy_ang/picgo_images/raw/master/20201012103534.png"> </p><p>出现版本号代表安装成功！</p><blockquote><p>2.安装 cnpm </p></blockquote><h3 id="npm与cnpm的区别"><a href="#npm与cnpm的区别" class="headerlink" title="npm与cnpm的区别"></a>npm与cnpm的区别</h3><p><strong>NPM（Node Package Manager，节点包管理器）是NodeJS的包管理器，用于节点插件的管理（包括安装，卸载和管理依赖等）。NPM是随同新版的NodeJS一起安装的包管理工具，所以我们需要安装NodeJS。</strong></p><p><strong>NPM的常见使用场景</strong></p><p><strong>1.允许用户从NPM服务器上下载别人编写的第三方包到本地使用。</strong></p><p><strong>2.允许用户从NPM服务器上下载并安装别人编写的命令行程序到本地使用。</strong></p><p><strong>3.允许用户将自己编写的包或命令行程序上传到NPM服务器上供别人使用。</strong></p><p><strong>为什么要用CNPM</strong></p><p><strong>NMP安装插件是从NPM官网下载对应的插件包，该网站的服务器在国外，经常会出现下载缓慢或出现异常，这时便需要找到另外的方法提供稳定的下载，这个方法就是CNPM。阿里巴巴的淘宝团队把NMP官网的插件都同步到了在中国的服务器，提供给我们从这个服务器上稳定下载资源。</strong></p><p><strong>CNMP同样是NMP的一个插件，要安装的话需要在CMD命令行控制台执行以下命令：</strong></p><pre><code>npm install cnpm -g --registry=https://registry.npm.taobao.org</code></pre><p><strong>安装完成后可以使用cnpm -v命令查看版本号，要使用cnmp命令的话最好在安装后重新打开CMD命令行控制台。</strong></p><p><strong>cnpm的用法和npm的用法一致，只是在执行命令的时候将npm改为cnpm</strong>。</p><ul><li>利用npm安装cnpm插件</li></ul><p><img src="https://gitee.com/xy_ang/picgo_images/raw/master/20201012103535.png"> </p><ul><li>验证安装是否成功</li></ul><p><img src="https://gitee.com/xy_ang/picgo_images/raw/master/20201012103536.png"> </p><p>==————————————————安装成功后进入下一环节！！——————————————————==</p><h2 id="2-博客安装操作"><a href="#2-博客安装操作" class="headerlink" title="2.博客安装操作"></a>2.博客安装操作</h2><ul><li>安装hexo开源博客</li></ul><pre class=" language-BASH"><code class="language-BASH">npm install hexo-cli -g</code></pre><p><img src="https://gitee.com/xy_ang/picgo_images/raw/master/20201012103537.png"> </p><ul><li>验证是否安装成功</li></ul><p><img src="https://gitee.com/xy_ang/picgo_images/raw/master/20201012103538.png"> </p><blockquote><p> 博客初始化</p></blockquote><p>1.在任意的盘符下新建文件夹，命名随意，我的命名：==XYBlog==</p><p>2.在该文件夹下打开<code>Git Bash here</code></p><p>3.输入指令<code>hexo init</code> 完成博客初始化；</p><p><img src="https://gitee.com/xy_ang/picgo_images/raw/master/20201012103539.png"> </p><p>4.运行博客</p><blockquote><p>命令 hexo server  / hexo s</p></blockquote><p><img src="https://gitee.com/xy_ang/picgo_images/raw/master/20201012103540.png"> </p><blockquote><p><a href="http://localhost:4000/">http://localhost:4000</a></p></blockquote><p><img src="https://gitee.com/xy_ang/picgo_images/raw/master/20201012103541.png"> </p><p>5.记录第一次博客</p><blockquote><p>hexo new “博客标题”</p></blockquote><p><img src="https://gitee.com/xy_ang/picgo_images/raw/master/20201012103542.png"> </p><p>之后在运行博客<code>hexo server</code>，在<a href="http://localhost:4000中即可看到刚写的博客">http://localhost:4000中即可看到刚写的博客</a>.</p><ul><li>写的博客存放路径</li></ul><p><img src="https://gitee.com/xy_ang/picgo_images/raw/master/20201012103543.png" alt="image-20201006150125772"> </p><blockquote><p>hexo clean 清除缓存</p></blockquote><h2 id="3-部署博客"><a href="#3-部署博客" class="headerlink" title="3.部署博客"></a>3.部署博客</h2><h4 id="1-登录码云"><a href="#1-登录码云" class="headerlink" title="1.登录码云"></a>1.登录码云</h4><p><a href="https://gitee.com/">码云</a></p><h4 id="2-新建仓库"><a href="#2-新建仓库" class="headerlink" title="2.新建仓库"></a>2.新建仓库</h4><p><img src="https://gitee.com/xy_ang/picgo_images/raw/master/20201012103544.png">  </p><h4 id="3-安装git插件"><a href="#3-安装git插件" class="headerlink" title="3.安装git插件"></a>3.安装git插件</h4><blockquote><pre class=" language-bash"><code class="language-bash">cnpm <span class="token function">install</span> --save hexo-deployer-git</code></pre></blockquote><p><img src="https://gitee.com/xy_ang/picgo_images/raw/master/20201012103545.png"> </p><h4 id="4-设置远程仓库"><a href="#4-设置远程仓库" class="headerlink" title="4.设置远程仓库"></a>4.设置远程仓库</h4><p><img src="https://gitee.com/xy_ang/picgo_images/raw/master/20201012103546.png"> </p><ul><li>设置url</li></ul><p><img src="https://gitee.com/xy_ang/picgo_images/raw/master/20201012103547.png">  </p><ul><li>设置仓库地址</li></ul><pre class=" language-bash"><code class="language-bash">deploy:  type: <span class="token function">git</span>  repo: https://gitee.com/用户名/仓库地址  branch: master</code></pre><p><img src="https://gitee.com/xy_ang/picgo_images/raw/master/20201012103548.png"> </p><h4 id="5-部署到远程"><a href="#5-部署到远程" class="headerlink" title="5.部署到远程"></a>5.部署到远程</h4><blockquote><p>在博客目录下打开Git Bash Here 输入 <code>hexo d</code></p></blockquote><p><strong>若在<code>hexo d</code> 后出现ERROR Deployer not found: git 则执行<code>npm install </code>–<code>save hexo-deployer-git</code>即可解决</strong></p><p><img src="https://gitee.com/xy_ang/picgo_images/raw/master/20201012103549.png"> </p><h4 id="6-开启静态页面服务"><a href="#6-开启静态页面服务" class="headerlink" title="6.开启静态页面服务"></a>6.开启静态页面服务</h4><p><img src="https://gitee.com/xy_ang/picgo_images/raw/master/20201012103550.png"> </p><p><img src="https://gitee.com/xy_ang/picgo_images/raw/master/20201012103551.png"> </p><h4 id="7-博客部署完成，个人博客"><a href="#7-博客部署完成，个人博客" class="headerlink" title="7.博客部署完成，个人博客"></a>7.博客部署完成，<a href="http://xy_ang.gitee.io/">个人博客</a></h4><p><img src="https://gitee.com/xy_ang/picgo_images/raw/master/20201012103552.png"></p><h2 id="4-博客流程"><a href="#4-博客流程" class="headerlink" title="4.博客流程"></a>4.博客流程</h2><h4 id="1-写博客"><a href="#1-写博客" class="headerlink" title="1.写博客"></a>1.写博客</h4><blockquote><p>执行<code>hexo new "标题"</code> 创建md文件，打开md文件，写博客即可</p></blockquote><h4 id="2-清缓存-amp-更新渲染"><a href="#2-清缓存-amp-更新渲染" class="headerlink" title="2.清缓存&amp;更新渲染"></a>2.清缓存&amp;更新渲染</h4><blockquote><p>hexo clean 清除缓存</p><p>hexo g重新渲染静态页面</p></blockquote><h4 id="3-推送到码云"><a href="#3-推送到码云" class="headerlink" title="3.推送到码云"></a>3.推送到码云</h4><blockquote><p>hexo d</p></blockquote><h4 id="4-更新码云的静态页面"><a href="#4-更新码云的静态页面" class="headerlink" title="4.更新码云的静态页面"></a>4.更新码云的静态页面</h4><p><img src="https://gitee.com/xy_ang/picgo_images/raw/master/20201012103553.png"> </p><h4 id="5-重新访问网站即可"><a href="#5-重新访问网站即可" class="headerlink" title="5.重新访问网站即可"></a>5.重新访问网站即可</h4><h2 id="5-博客的美化"><a href="#5-博客的美化" class="headerlink" title="5.博客的美化"></a>5.博客的美化</h2><p>1.进入博客目录打开<code>GitBash</code>，选择字节喜欢的主题（可以在网上搜索）本次讲解以==Matery==主题说明.</p><pre class=" language-bash"><code class="language-bash"><span class="token function">git</span> clone  https://github.com/blinkfox/hexo-theme-matery</code></pre><p>2.克隆完成后，配置主题</p><p>在博客文件夹的themes目录下创建matery目录，然后把刚克隆好的主题部分复制到matery目录下</p><p><img src="https://gitee.com/xy_ang/picgo_images/raw/master/20201012103554.png">   </p><p>接下来配置博客目录下的<code>_config.yml</code>文件</p><p><img src="https://gitee.com/xy_ang/picgo_images/raw/master/20201012103555.png"> </p><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true">#清除缓存，渲染页面</span>hexo clean <span class="token operator">&amp;&amp;</span> hexo generate 简写 hexo cl <span class="token operator">&amp;&amp;</span> hexo g<span class="token comment" spellcheck="true">#重启本地服务，可以本地访问页面</span>hexo server 简写 hexo s</code></pre><h2 id="6-床图的使用PicGo"><a href="#6-床图的使用PicGo" class="headerlink" title="6.床图的使用PicGo"></a>6.床图的使用PicGo</h2><h4 id="1-下载并安装PicGo"><a href="#1-下载并安装PicGo" class="headerlink" title="1.下载并安装PicGo"></a>1.下载并安装PicGo</h4><h4 id="2-配置PicGo"><a href="#2-配置PicGo" class="headerlink" title="2.配置PicGo"></a>2.配置PicGo<img src="https://gitee.com/xy_ang/picgo_images/raw/master/20201012103556.png"></h4><p>3.<img src="https://gitee.com/xy_ang/picgo_images/raw/master/20201012103557.png"> </p><p>4.</p><p><code>repo:</code><img src="https://gitee.com/xy_ang/picgo_images/raw/master/20201012103558.png"> </p><p><code>token:</code>在gitee新建仓库 <img src="https://gitee.com/xy_ang/picgo_images/raw/master/20201012103559.png"> </p><p>然后在设置里面找到私人令牌  </p><p><img src="https://gitee.com/xy_ang/picgo_images/raw/master/20201012103600.png">  </p><p><img src="https://gitee.com/xy_ang/picgo_images/raw/master/20201012103601.png" alt="image-20201010001620218"> </p><p>填写以下参数（空着的默认不填）：</p><p><img src="https://gitee.com/xy_ang/picgo_images/raw/master/20201012103602.png"> </p><p>5.完成<img src="https://gitee.com/xy_ang/picgo_images/raw/master/20201012103603.png"> </p><h2 id="7-PicGo床图结合Typora使用"><a href="#7-PicGo床图结合Typora使用" class="headerlink" title="7.PicGo床图结合Typora使用"></a>7.PicGo床图结合Typora使用</h2><h4 id="1-在typora中找到偏好设置"><a href="#1-在typora中找到偏好设置" class="headerlink" title="1.在typora中找到偏好设置"></a>1.在typora中找到偏好设置</h4><p><img src="https://gitee.com/xy_ang/picgo_images/raw/master/20201012103604.png"> </p><h4 id="2-采坑点"><a href="#2-采坑点" class="headerlink" title="2.采坑点"></a>2.采坑点</h4><p><strong>倘若配置完成后点击<code>验证失败</code>，则切换更高版本的PicGo（建议使用2.3.0），或者升级typora.</strong></p><h4 id="3-配置完成"><a href="#3-配置完成" class="headerlink" title="3.配置完成"></a>3.配置完成</h4><p>验证成功后，在用typora写博客用到图片上，直接粘贴图片，图片会自动上传到gitee所建的仓库中，可在</p><p>PicGo-相册 中查看；</p><p><code>越努力，越幸运，Just do it！</code></p>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Typora常用快捷键</title>
      <link href="/xy_ang/2020/10/09/typora-chang-yong/"/>
      <url>/xy_ang/2020/10/09/typora-chang-yong/</url>
      
        <content type="html"><![CDATA[<h2 id="Markdown语法"><a href="#Markdown语法" class="headerlink" title="Markdown语法"></a>Markdown语法</h2><h3 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h3><p>快捷键 CTRL+1-6 或者 #+空格(几级标题几个#号)  CTRL+0 清除</p><h3 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h3><p>快捷键 CTRL+SHIFT+[ 或者 数字+.+空格 如1. xx</p><h3 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h3><p>快捷键 CTRL+SHIFT+]  或者 -+空格 或者*+空格</p><p>注意：有序列表和无序列表可以嵌套，其中降级TAB，升级SHIFT+TAB</p><h3 id="任务列表"><a href="#任务列表" class="headerlink" title="任务列表"></a>任务列表</h3><p>-+空格+[+空格+]  如- [ ]</p><h3 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h3><p>快捷键 CTRL+T 或者 |xx|xx|xx|+回车  CTRL+回车可以添加行</p><h3 id="行内代码"><a href="#行内代码" class="headerlink" title="行内代码"></a>行内代码</h3><p>快捷键 CTRL+SHIFT+`  或者 反引号+文字+反引号</p><h3 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h3><p>三个反引号+语言 回车 或者 三个波浪线+语言 快捷键 CTRL+SHIFT+K</p><h3 id="插入图片"><a href="#插入图片" class="headerlink" title="插入图片"></a>插入图片</h3><p>快捷键 CTRL+SHIFT+i 或者!+[]+() 选择图片</p><p><code>注意：</code></p><p>粗线是一对双星号** </p><p>斜体是一对单星号* </p>]]></content>
      
      
      <categories>
          
          <category> 随笔录丶 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>博客常用参数</title>
      <link href="/xy_ang/2020/10/08/hexo-chang-yong-can-shu/"/>
      <url>/xy_ang/2020/10/08/hexo-chang-yong-can-shu/</url>
      
        <content type="html"><![CDATA[<h1 id="Front-matter-选项详解"><a href="#Front-matter-选项详解" class="headerlink" title="Front-matter 选项详解"></a>Front-matter 选项详解</h1><p><code>Front-matter</code> 选项中的所有内容均为<strong>非必填</strong>的。但我仍然建议至少填写 <code>title</code> 和 <code>date</code> 的值。</p><table><thead><tr><th>配置选项</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>title</td><td><code>Markdown</code> 的文件标题</td><td>文章标题，强烈建议填写此选项</td></tr><tr><td>date</td><td>文件创建时的日期时间</td><td>发布时间，强烈建议填写此选项，且最好保证全局唯一</td></tr><tr><td>author</td><td>根 <code>_config.yml</code> 中的 <code>author</code></td><td>文章作者</td></tr><tr><td>img</td><td><code>featureImages</code> 中的某个值</td><td>文章特征图，推荐使用图床(腾讯云、七牛云、又拍云等)来做图片的路径.如: <code>http://xxx.com/xxx.jpg</code></td></tr><tr><td>top</td><td><code>true</code></td><td>推荐文章（文章是否置顶），如果 <code>top</code> 值为 <code>true</code>，则会作为首页推荐文章</td></tr><tr><td>cover</td><td><code>false</code></td><td><code>v1.0.2</code>版本新增，表示该文章是否需要加入到首页轮播封面中</td></tr><tr><td>coverImg</td><td>无</td><td><code>v1.0.2</code>版本新增，表示该文章在首页轮播封面需要显示的图片路径，如果没有，则默认使用文章的特色图片</td></tr><tr><td>password</td><td>无</td><td>文章阅读密码，如果要对文章设置阅读验证密码的话，就可以设置 <code>password</code> 的值，该值必须是用 <code>SHA256</code> 加密后的密码，防止被他人识破。前提是在主题的 <code>config.yml</code> 中激活了 <code>verifyPassword</code> 选项</td></tr><tr><td>toc</td><td><code>true</code></td><td>是否开启 TOC，可以针对某篇文章单独关闭 TOC 的功能。前提是在主题的 <code>config.yml</code> 中激活了 <code>toc</code> 选项</td></tr><tr><td>mathjax</td><td><code>false</code></td><td>是否开启数学公式支持 ，本文章是否开启 <code>mathjax</code>，且需要在主题的 <code>_config.yml</code> 文件中也需要开启才行</td></tr><tr><td>summary</td><td>无</td><td>文章摘要，自定义的文章摘要内容，如果这个属性有值，文章卡片摘要就显示这段文字，否则程序会自动截取文章的部分内容作为摘要</td></tr><tr><td>categories</td><td>无</td><td>文章分类，本主题的分类表示宏观上大的分类，只建议一篇文章一个分类</td></tr><tr><td>tags</td><td>无</td><td>文章标签，一篇文章可以多个标签</td></tr><tr><td>keywords</td><td>文章标题</td><td>文章关键字，SEO 时需要</td></tr><tr><td>reprintPolicy</td><td>cc_by</td><td>文章转载规则， 可以是 cc_by, cc_by_nd, cc_by_sa, cc_by_nc, cc_by_nc_nd, cc_by_nc_sa, cc0, noreprint 或 pay 中的一个</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 随笔录丶 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Marldown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript基础</title>
      <link href="/xy_ang/2020/10/08/javascript/"/>
      <url>/xy_ang/2020/10/08/javascript/</url>
      
        <content type="html"><![CDATA[<h1 id="JavaScript-精通"><a href="#JavaScript-精通" class="headerlink" title="JavaScript(精通)"></a>JavaScript(精通)</h1><p><strong>脚本语言</strong></p><h2 id="1-引入JavaScript"><a href="#1-引入JavaScript" class="headerlink" title="1.引入JavaScript"></a>1.引入JavaScript</h2><ul><li><p>内部引入</p><pre class=" language-html"><code class="language-html">     <span class="token comment" spellcheck="true">&lt;!--&lt;script> 标签,写JavaScript代码,一般放在&lt;head>内 或者 &lt;body>的最下方--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">        <span class="token comment" spellcheck="true">//alter();  弹窗</span>        <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"hello word"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code></pre></li><li><p>外部引入</p><pre class=" language-html"><code class="language-html">     <span class="token comment" spellcheck="true">&lt;!--外部引入 必须成对出现--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>../JS/js.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!--不用显示定义type 默认text/javascript--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code></pre></li></ul><h2 id="2-基本语法"><a href="#2-基本语法" class="headerlink" title="2.基本语法"></a>2.基本语法</h2><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">        <span class="token comment" spellcheck="true">//JavaScript 严格区分大小写</span>        <span class="token comment" spellcheck="true">//1.定义变量</span>        <span class="token keyword">var</span> name<span class="token operator">=</span><span class="token string">"hs"</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//条件控制</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token operator">></span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"true"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">//console.log(变量) 在浏览器的控制台打印变量</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code></pre><h2 id="3-数据类型"><a href="#3-数据类型" class="headerlink" title="3.数据类型"></a>3.数据类型</h2><pre class=" language-javascript"><code class="language-javascript"><span class="token comment" spellcheck="true">//number</span><span class="token comment" spellcheck="true">//js不区分小数和整数</span><span class="token number">NaN</span> <span class="token comment" spellcheck="true">//not a number</span><span class="token number">Infinity</span> <span class="token comment" spellcheck="true">//表示无限大</span><span class="token comment" spellcheck="true">//字符串</span><span class="token string">'abc'</span> <span class="token string">"abc"</span><span class="token comment" spellcheck="true">//布尔值</span><span class="token boolean">true</span> <span class="token boolean">false</span><span class="token comment" spellcheck="true">//逻辑运算符</span><span class="token operator">&amp;&amp;</span> <span class="token operator">||</span> ！<span class="token comment" spellcheck="true">//比较运算符</span><span class="token operator">=</span> <span class="token operator">==</span> <span class="token comment" spellcheck="true">//等于(类型不一样，值一样，true) 一般不用</span><span class="token operator">===</span> <span class="token comment" spellcheck="true">//绝对等于(类型一样，值一样)</span>须知：    <span class="token number">NaN</span><span class="token operator">===</span><span class="token number">NaN</span> <span class="token comment" spellcheck="true">//NaN与所有的数值都不相等</span>    <span class="token comment" spellcheck="true">//只能通过isNaN(NaN)来判断这个数是否时NaN</span>    <span class="token comment" spellcheck="true">//尽量避免使用浮点数进行运算</span><span class="token comment" spellcheck="true">//null 和 undefined</span><span class="token keyword">null</span> <span class="token comment" spellcheck="true">//空</span>undifined <span class="token comment" spellcheck="true">//未定义</span><span class="token comment" spellcheck="true">//数组</span><span class="token comment" spellcheck="true">//类型可以不一致</span><span class="token comment" spellcheck="true">//对象</span><span class="token comment" spellcheck="true">//对象是大括号，数组时中括号 </span><span class="token comment" spellcheck="true">//每个属性用逗号隔开，最后一个不需要</span><span class="token comment" spellcheck="true">//取对象的值用 .</span></code></pre><h2 id="4-严格检查模式"><a href="#4-严格检查模式" class="headerlink" title="4.严格检查模式"></a>4.严格检查模式</h2><pre class=" language-javascript"><code class="language-javascript"> <span class="token string">'use strict'</span><span class="token comment" spellcheck="true">//严格检查模式，预防js的随意性产生的一些问题 ，必须写在js第一行</span> <span class="token comment" spellcheck="true">//局部变量建议都使用let 定义</span>  i<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">;</span></code></pre><h2 id="5-数据类型详讲"><a href="#5-数据类型详讲" class="headerlink" title="5.数据类型详讲"></a>5.数据类型详讲</h2><pre class=" language-javascript"><code class="language-javascript"><span class="token comment" spellcheck="true">//字符串的长连接 ，定义了字符串则不可变</span><span class="token keyword">let</span> msg<span class="token operator">=</span><span class="token template-string"><span class="token string">`        hello        word!!!        !        `</span></span><span class="token comment" spellcheck="true">//模板字符串</span><span class="token keyword">let</span> name<span class="token operator">=</span><span class="token string">'hs'</span><span class="token punctuation">;</span><span class="token keyword">let</span> age<span class="token operator">=</span><span class="token number">18</span><span class="token punctuation">;</span><span class="token keyword">let</span> msg1<span class="token operator">=</span><span class="token template-string"><span class="token string">`你好，</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">`</span></span>；<span class="token comment" spellcheck="true">//还有操作字符串的函数等</span>msg1<span class="token punctuation">.</span>lengthmsg1<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true">//转换为小写</span>msg1<span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true">//转换为大写</span>msg1<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// [) 左闭右开 截取字符串</span></code></pre><pre class=" language-javascript"><code class="language-javascript"><span class="token comment" spellcheck="true">//数组</span><span class="token keyword">let</span> arr0<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token string">"hello"</span><span class="token punctuation">,</span><span class="token string">"1"</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//注意：</span><span class="token comment" spellcheck="true">//arr0.length的长度发生改变，数组的长度也会改变，length变小，数据会丢失，length变大，数组长度变大 </span>arr0<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//对数组截取 [)前闭后开</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//压入尾部的方法</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//弹出尾部元素</span><span class="token function">unshift</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//压入头部</span><span class="token function">shift</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//弹出头部元素</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true">//排序</span><span class="token function">reverse</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//反转</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//拼接 并没有修改数组，只是会返回新的数组</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//打印拼接数组，使用特定的符号连接  </span><span class="token comment" spellcheck="true">//例如，</span>arr<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">'-'</span><span class="token punctuation">)</span><span class="token string">"A-C-B"</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">-</span></code></pre><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">var</span> 对象名<span class="token operator">=</span><span class="token punctuation">{</span>    属性名：属性值，    属性名：属性值，    属性名：属性值，    属性名：属性值<span class="token punctuation">}</span><span class="token comment" spellcheck="true">//键值对格式，最后一个属性不加逗号！！</span><span class="token comment" spellcheck="true">//JavaScript中的所有的键都是字符串，key是任意的</span><span class="token comment" spellcheck="true">//动态的删减属性</span><span class="token keyword">delete</span> 对象<span class="token punctuation">.</span>属性名<span class="token comment" spellcheck="true">//动态的添加属性</span>对象<span class="token punctuation">.</span>新属性<span class="token operator">=</span>Key<span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token comment" spellcheck="true">//判断属性是都在对象中 用in</span><span class="token comment" spellcheck="true">//例如，</span><span class="token string">"age"</span> <span class="token keyword">in</span> person<span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span></code></pre><h2 id="6-流程控制"><a href="#6-流程控制" class="headerlink" title="6.流程控制"></a>6.流程控制</h2><p><strong>if while for 都和java类似</strong></p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> arr<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'A'</span><span class="token punctuation">,</span><span class="token string">'C'</span><span class="token punctuation">,</span><span class="token string">'B'</span><span class="token punctuation">]</span><span class="token comment" spellcheck="true">//foreach 循环</span>arr<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token punctuation">{</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">//for in 循环  </span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> num <span class="token keyword">in</span> arr<span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token comment" spellcheck="true">//num 是数组的下标     of打印的是值</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>num<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">}</span></code></pre><h2 id="7-Map-Set"><a href="#7-Map-Set" class="headerlink" title="7.Map Set"></a>7.Map Set</h2><pre class=" language-javascript"><code class="language-javascript"><span class="token comment" spellcheck="true">//ES6 新特性</span><span class="token comment" spellcheck="true">//Map 集合</span><span class="token keyword">var</span> map<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">"A"</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">"B"</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">"C"</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>map<span class="token punctuation">.</span><span class="token keyword">set</span><span class="token punctuation">(</span><span class="token string">"D"</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//新增K—V</span>map<span class="token punctuation">.</span><span class="token keyword">delete</span><span class="token punctuation">(</span><span class="token string">"D"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> param<span class="token operator">=</span>map<span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span><span class="token string">"A"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>param<span class="token punctuation">)</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">-</span><span class="token comment" spellcheck="true">//Set集合  无序，不可重复</span><span class="token keyword">var</span> <span class="token keyword">set</span><span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">set</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">set</span><span class="token punctuation">.</span><span class="token keyword">delete</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">set</span><span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//判断是否包含</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span></code></pre><h2 id="8-函数"><a href="#8-函数" class="headerlink" title="8.函数"></a>8.函数</h2><pre class=" language-javascript"><code class="language-javascript"><span class="token comment" spellcheck="true">//第一种方式</span><span class="token keyword">function</span> <span class="token function">abs</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>x<span class="token operator">></span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">return</span> x<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token operator">-</span>x<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">//第二种方式</span><span class="token keyword">var</span> abs<span class="token operator">=</span><span class="token keyword">function</span> <span class="token punctuation">(</span>x<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>x<span class="token operator">></span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">return</span> x<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token operator">-</span>x<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span>    <span class="token comment" spellcheck="true">//arguments是JS免费赠送的关键字，代表传递进来的所有参数，是一个数组</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> x <span class="token keyword">of</span> arguments<span class="token punctuation">)</span><span class="token punctuation">{</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">-</span><span class="token comment" spellcheck="true">//ES6新特性   rest</span>    <span class="token keyword">var</span> abs<span class="token operator">=</span><span class="token keyword">function</span> <span class="token punctuation">(</span>x<span class="token punctuation">,</span><span class="token operator">...</span>rest<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>x<span class="token operator">></span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token operator">-</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>rest<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//必须放在最后，打印的是多余的参数，作为数组</span>    <span class="token punctuation">}</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token keyword">const</span> <span class="token comment" spellcheck="true">//用于定义常量</span><span class="token comment" spellcheck="true">//局部变量用let   若是用var的话超出变量的作用范围还能用，会产生冲突！！</span></code></pre><h3 id="1-方法"><a href="#1-方法" class="headerlink" title="1.方法"></a>1.方法</h3><pre class=" language-javascript"><code class="language-javascript"><span class="token comment" spellcheck="true">//定义对象的属性和方法</span><span class="token keyword">var</span> now<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getFullYear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> student<span class="token operator">=</span><span class="token punctuation">{</span>    name<span class="token punctuation">:</span><span class="token string">"hs"</span><span class="token punctuation">,</span>    score<span class="token punctuation">:</span><span class="token number">88</span><span class="token punctuation">,</span>    birthday<span class="token punctuation">:</span><span class="token number">1999</span><span class="token punctuation">,</span>    age<span class="token punctuation">:</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> now<span class="token operator">-</span><span class="token keyword">this</span><span class="token punctuation">.</span>birthday      <span class="token comment" spellcheck="true">//this指代当前对象</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//调用方法</span>student<span class="token punctuation">.</span><span class="token function">age</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">var</span> now <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getFullYear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> student <span class="token operator">=</span> <span class="token punctuation">{</span>    name<span class="token punctuation">:</span> <span class="token string">"hs"</span><span class="token punctuation">,</span>    score<span class="token punctuation">:</span> <span class="token number">88</span><span class="token punctuation">,</span>    birthday<span class="token punctuation">:</span> <span class="token number">1999</span><span class="token punctuation">,</span>    age<span class="token punctuation">:</span> getAge<span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">function</span> <span class="token function">getAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> now <span class="token operator">-</span> <span class="token keyword">this</span><span class="token punctuation">.</span>birthday<span class="token punctuation">}</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>getAge<span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>student<span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//apply 函数都有的可以指定指向的对象 []代表空参</span></code></pre><h3 id="2-内置对象"><a href="#2-内置对象" class="headerlink" title="2.内置对象"></a>2.内置对象</h3><pre class=" language-javascript"><code class="language-javascript"><span class="token comment" spellcheck="true">// typeof 判断该数据的类型</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//日期类</span><span class="token keyword">var</span> now<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>now<span class="token punctuation">.</span><span class="token function">getFullYear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//年</span>now<span class="token punctuation">.</span><span class="token function">getDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//日</span>now<span class="token punctuation">.</span><span class="token function">getDay</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//星期几</span>now<span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//时间戳</span></code></pre><h3 id="3-JSON"><a href="#3-JSON" class="headerlink" title="3.JSON"></a>3.JSON</h3><ul><li><strong>是一种轻量级的数据交换格式</strong></li><li><strong>层次结构简洁清晰，理想的数据交换语言</strong></li><li><strong>易于编写，同时也易于机器解析和生成，能有效的提升网络传输效率</strong></li></ul><p>在js中，一些皆对象，任何js支持的类型都能用JSON表示</p><p>格式：</p><ul><li>对象 {}</li><li>数组[]</li><li>所有的键值对 K:V</li></ul><pre class=" language-javascript"><code class="language-javascript"><span class="token comment" spellcheck="true">//JSON字符串和JS对象的转换</span><span class="token keyword">let</span> person <span class="token operator">=</span> <span class="token punctuation">{</span>    name<span class="token punctuation">:</span> <span class="token string">"hs"</span><span class="token punctuation">,</span>    age<span class="token punctuation">:</span> <span class="token number">18</span><span class="token punctuation">,</span>    email<span class="token punctuation">:</span> <span class="token string">"1972728214@qq.com"</span><span class="token punctuation">,</span>    score<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//将对象转换为JSON的格式</span>JSON<span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>person<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//解析JSON数据    参数为字符串</span>JSON<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token string">'{"name":"hs","age":18,"email":"1972728214@qq.com","score":0}'</span><span class="token punctuation">)</span></code></pre><h2 id="9-面向对象编程"><a href="#9-面向对象编程" class="headerlink" title="9.面向对象编程"></a>9.面向对象编程</h2><p>类：模板，原型</p><p>对象：类的实例</p><pre class=" language-javascript"><code class="language-javascript"><span class="token comment" spellcheck="true">//ES6特性</span><span class="token comment" spellcheck="true">//继承</span><span class="token keyword">class</span> <span class="token class-name">Student</span><span class="token punctuation">{</span>    <span class="token function">constructor</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token operator">=</span>name<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//this指代成员变量  不用this，表示局部变量</span>    <span class="token punctuation">}</span>    <span class="token function">hello</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"hello"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">class</span> <span class="token class-name">xiaoStudent</span> <span class="token keyword">extends</span> <span class="token class-name">Student</span><span class="token punctuation">{</span>    <span class="token function">constructor</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span>age<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">super</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>age<span class="token operator">=</span>age<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token function">myInformaction</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'子类！'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">new</span> <span class="token class-name">Student</span><span class="token punctuation">(</span><span class="token string">'hs'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">hello</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h3 id="1-操作BOM对象"><a href="#1-操作BOM对象" class="headerlink" title="1.操作BOM对象"></a>1.操作BOM对象</h3><p>BOM：浏览器对象模型</p><pre class=" language-javascript"><code class="language-javascript">window <span class="token comment" spellcheck="true">//浏览器窗口</span>navigator <span class="token comment" spellcheck="true">//封装了浏览器的信息</span>screen <span class="token comment" spellcheck="true">//代表屏幕尺寸</span>screen<span class="token punctuation">.</span>widthscreen<span class="token punctuation">.</span>heigth <span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span>location <span class="token comment" spellcheck="true">//重要，代表当前页面的URL信息</span>location<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span><span class="token string">'网址'</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//设置新的地址</span>location<span class="token punctuation">.</span><span class="token function">reload</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//刷新网页</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">-</span>document<span class="token comment" spellcheck="true">//代表当前页面</span><span class="token comment" spellcheck="true">//获取cookie</span>document<span class="token punctuation">.</span>cookie<span class="token punctuation">;</span>history <span class="token comment" spellcheck="true">//代表浏览器的历史记录</span>history<span class="token punctuation">.</span><span class="token function">back</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//返回</span>history<span class="token punctuation">.</span><span class="token function">forward</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//前进</span></code></pre><h3 id="2-操作DOM对象"><a href="#2-操作DOM对象" class="headerlink" title="2.操作DOM对象"></a>2.操作DOM对象</h3><p>DOM：文档对象模型</p><p>浏览器就是一个DOM树形结构</p><ul><li>更新：更新DOM节点</li><li>遍历DOM节点，得到DOM节点</li><li>删除：删除DOM节点</li><li>添加一个新的DOM节点</li></ul><p>操作DOM节点必须先获得DOM节点；</p><blockquote><p>获得DOM节点</p></blockquote><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span>标题1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>p1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>p2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>father<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">        <span class="token comment" spellcheck="true">//对应css选择器</span>        document<span class="token punctuation">.</span><span class="token function">getElementsByClassName</span><span class="token punctuation">(</span><span class="token string">'p2'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//类</span>        document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'p1'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token comment" spellcheck="true">//id</span>        document<span class="token punctuation">.</span><span class="token function">getElementsByTagName</span><span class="token punctuation">(</span><span class="token string">'h1'</span><span class="token punctuation">)</span>      <span class="token comment" spellcheck="true">//标签</span>        <span class="token keyword">var</span> father<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'father'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//注意：id用于获取父节点下的子属性</span>        father<span class="token punctuation">.</span>children <span class="token comment" spellcheck="true">//获取父节点下的所有子节点</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span></code></pre><blockquote><p>更新DOM节点</p></blockquote><pre class=" language-javascript"><code class="language-javascript"><span class="token comment" spellcheck="true">// 先获取DOM节点</span> <span class="token keyword">var</span> father<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'father'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 操作文本</span>father<span class="token punctuation">.</span>innertext<span class="token operator">=</span><span class="token string">''</span>father<span class="token punctuation">.</span>innerHTML<span class="token operator">=</span><span class="token string">'&lt;strong>&lt;/strong>'</span><span class="token comment" spellcheck="true">//操作JS</span>father<span class="token punctuation">.</span>style<span class="token punctuation">.</span>color<span class="token operator">=</span><span class="token string">''</span>  <span class="token comment" spellcheck="true">// 属性是字符串</span>father<span class="token punctuation">.</span>style<span class="token punctuation">.</span>padding<span class="token operator">=</span><span class="token string">''</span></code></pre><blockquote><p>删除节点</p></blockquote><p>步骤：先获取父节点，再通过父节点删除自己</p><pre class=" language-html"><code class="language-html">var father=document.getElementById('father');//删除子节点father.removeChild()//注意：动态删除，节点时刻变化</code></pre><blockquote><p>插入节点</p></blockquote><p>注意：直接插入会覆盖以前的内容，使用追加的方法appendChild</p><pre class=" language-javascript"><code class="language-javascript"><span class="token comment" spellcheck="true">// 节点的插入</span><span class="token operator">&lt;</span>p id<span class="token operator">=</span><span class="token string">"js"</span><span class="token operator">></span>JS<span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span><span class="token operator">&lt;</span>div id<span class="token operator">=</span><span class="token string">"java"</span><span class="token operator">></span>    <span class="token operator">&lt;</span>p id<span class="token operator">=</span><span class="token string">"se"</span><span class="token operator">></span>javase<span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span><span class="token operator">&lt;</span>p id<span class="token operator">=</span><span class="token string">"ee"</span><span class="token operator">></span>javaee<span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span><span class="token operator">&lt;</span>p id<span class="token operator">=</span><span class="token string">"me"</span><span class="token operator">></span>javame<span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>    <span class="token operator">&lt;</span>script<span class="token operator">></span>        <span class="token keyword">var</span>            java<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'java'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            js<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'js'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        java<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>js<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span class="token comment" spellcheck="true">//创建节点</span><span class="token operator">&lt;</span>script<span class="token operator">></span> <span class="token keyword">var</span> newP<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">'p'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//创建一个p标签</span>        newP<span class="token punctuation">.</span>id<span class="token operator">=</span><span class="token string">'newP'</span><span class="token punctuation">;</span>        newP<span class="token punctuation">.</span>innerText<span class="token operator">=</span><span class="token string">'你好'</span><span class="token punctuation">;</span>        java<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>newP<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span class="token comment" spellcheck="true">//共用方法设置属性K，V</span><span class="token operator">&lt;</span>script<span class="token operator">></span><span class="token keyword">var</span> myScript<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">'script'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        myScript<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">'type'</span><span class="token punctuation">,</span><span class="token string">'text/css'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span class="token comment" spellcheck="true">// insertBefore 插入节点</span></code></pre><h2 id="10-获得和操作表单的值"><a href="#10-获得和操作表单的值" class="headerlink" title="10.获得和操作表单的值"></a>10.获得和操作表单的值</h2><pre class=" language-javascript"><code class="language-javascript"><span class="token operator">&lt;</span>form action<span class="token operator">=</span><span class="token string">"#"</span> method<span class="token operator">=</span><span class="token string">"get"</span><span class="token operator">></span>    <span class="token operator">&lt;</span>span<span class="token operator">></span>同户名<span class="token punctuation">:</span><span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span><span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string">"text"</span> id<span class="token operator">=</span><span class="token string">"username"</span><span class="token operator">/</span><span class="token operator">></span>        <span class="token operator">&lt;</span>span<span class="token operator">></span>性别<span class="token punctuation">:</span><span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span>      <span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string">"radio"</span> name<span class="token operator">=</span><span class="token string">"sex"</span> value<span class="token operator">=</span><span class="token string">"man"</span> id<span class="token operator">=</span><span class="token string">"boy"</span><span class="token operator">/</span><span class="token operator">></span>男<span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string">"radio"</span> name<span class="token operator">=</span><span class="token string">"sex"</span> value<span class="token operator">=</span><span class="token string">"women"</span> id<span class="token operator">=</span><span class="token string">"girl"</span><span class="token operator">/</span><span class="token operator">></span>女<span class="token operator">&lt;</span><span class="token operator">/</span>form<span class="token operator">></span><span class="token operator">&lt;</span>script<span class="token operator">></span>      <span class="token keyword">var</span> sx<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">getElementsByName</span><span class="token punctuation">(</span><span class="token string">'sex'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            boy_b<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'boy'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            girl_g<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'girl'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// boy_b.checked 判断标签是否被选中</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span></code></pre><h3 id="1-操作表单（验证）"><a href="#1-操作表单（验证）" class="headerlink" title="1.操作表单（验证）"></a>1.操作表单（验证）</h3><blockquote><p>提交绑定事件</p></blockquote><pre class=" language-javascript"><code class="language-javascript"><span class="token operator">&lt;</span>head<span class="token operator">></span>    <span class="token operator">&lt;</span>meta charset<span class="token operator">=</span><span class="token string">"UTF-8"</span><span class="token operator">></span>    <span class="token operator">&lt;</span>title<span class="token operator">></span>Title<span class="token operator">&lt;</span><span class="token operator">/</span>title<span class="token operator">></span>    <span class="token operator">&lt;</span>link rel<span class="token operator">=</span><span class="token string">""</span> type<span class="token operator">=</span><span class="token string">""</span><span class="token operator">></span>    <span class="token operator">&lt;</span>script src<span class="token operator">=</span><span class="token string">"https://cdn.bootcss.com/blueimp-md5/2.10.0/js/md5.min.js"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>head<span class="token operator">></span><span class="token operator">&lt;</span>body<span class="token operator">></span><span class="token operator">&lt;</span>table<span class="token operator">></span>    <span class="token operator">&lt;</span>form action<span class="token operator">=</span><span class="token string">"#"</span> method<span class="token operator">=</span><span class="token string">"post"</span><span class="token operator">></span>        <span class="token operator">&lt;</span>tr<span class="token operator">></span>            <span class="token operator">&lt;</span>td<span class="token operator">></span><span class="token operator">&lt;</span>span<span class="token operator">></span>同户名<span class="token punctuation">:</span><span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span><span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string">"text"</span> id<span class="token operator">=</span><span class="token string">"username"</span> name<span class="token operator">=</span><span class="token string">"username"</span><span class="token operator">/</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>td<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>tr<span class="token operator">></span>        <span class="token operator">&lt;</span>tr<span class="token operator">></span>            <span class="token operator">&lt;</span>td<span class="token operator">></span>                <span class="token operator">&lt;</span>span<span class="token operator">></span>密<span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>码<span class="token punctuation">:</span><span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span>      <span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string">"password"</span> id<span class="token operator">=</span><span class="token string">"password"</span> name<span class="token operator">=</span><span class="token string">"password"</span><span class="token operator">/</span><span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token operator">/</span>td<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>tr<span class="token operator">></span>        <span class="token operator">&lt;</span>tr<span class="token operator">></span>            <span class="token operator">&lt;</span>td<span class="token operator">></span>                <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>点击提交，绑定事件<span class="token operator">--</span><span class="token operator">></span>                <span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string">"submit"</span> onclick<span class="token operator">=</span><span class="token string">"fn1()"</span><span class="token operator">/</span><span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token operator">/</span>td<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>tr<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>form<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>table<span class="token operator">></span>    <span class="token operator">&lt;</span>script<span class="token operator">></span>        <span class="token keyword">function</span> <span class="token function">fn1</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">var</span>                uname<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'username'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                pwd<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'password'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>uname<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>pwd<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//MD5 算法</span>            pwd<span class="token punctuation">.</span>value<span class="token operator">=</span><span class="token function">md5</span><span class="token punctuation">(</span>pwd<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>pwd<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//true 提交通过  false 提交不通过</span>            <span class="token keyword">return</span> ture；        <span class="token punctuation">}</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>body<span class="token operator">></span></code></pre><blockquote><p>表单绑定事件</p></blockquote><pre class=" language-javascript"><code class="language-javascript"><span class="token operator">&lt;</span>form action<span class="token operator">=</span><span class="token string">"#"</span> method<span class="token operator">=</span><span class="token string">"post"</span> onsubmit<span class="token operator">=</span><span class="token string">" return fn1()"</span><span class="token operator">></span>  <span class="token comment" spellcheck="true">// 同提交绑定事件类似</span>    <span class="token comment" spellcheck="true">// onsubmit 接受提交表单的结果 ， 若fn1()函数 返回false 则不通过  true则通过</span></code></pre><blockquote><p>提高网站安全性，隐藏密码</p></blockquote><pre class=" language-javascript"><code class="language-javascript"><span class="token operator">&lt;</span>head<span class="token operator">></span>    <span class="token operator">&lt;</span>meta charset<span class="token operator">=</span><span class="token string">"UTF-8"</span><span class="token operator">></span>    <span class="token operator">&lt;</span>title<span class="token operator">></span>Title<span class="token operator">&lt;</span><span class="token operator">/</span>title<span class="token operator">></span>    <span class="token operator">&lt;</span>link rel<span class="token operator">=</span><span class="token string">""</span> type<span class="token operator">=</span><span class="token string">""</span><span class="token operator">></span>    <span class="token operator">&lt;</span>script src<span class="token operator">=</span><span class="token string">"https://cdn.bootcss.com/blueimp-md5/2.10.0/js/md5.min.js"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>head<span class="token operator">></span><span class="token operator">&lt;</span>body<span class="token operator">></span><span class="token operator">&lt;</span>table<span class="token operator">></span>    <span class="token operator">&lt;</span>form action<span class="token operator">=</span><span class="token string">"#"</span> method<span class="token operator">=</span><span class="token string">"post"</span> onsubmit<span class="token operator">=</span><span class="token string">"return fn1()"</span><span class="token operator">></span>        <span class="token operator">&lt;</span>tr<span class="token operator">></span>            <span class="token operator">&lt;</span>td<span class="token operator">></span><span class="token operator">&lt;</span>span<span class="token operator">></span>同户名<span class="token punctuation">:</span><span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span><span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string">"text"</span> id<span class="token operator">=</span><span class="token string">"username"</span> name<span class="token operator">=</span><span class="token string">"username"</span><span class="token operator">/</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>td<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>tr<span class="token operator">></span>        <span class="token operator">&lt;</span>tr<span class="token operator">></span>            <span class="token operator">&lt;</span>td<span class="token operator">></span>                <span class="token operator">&lt;</span>span<span class="token operator">></span>密<span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>码<span class="token punctuation">:</span><span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span>      <span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string">"password"</span> id<span class="token operator">=</span><span class="token string">"password"</span> <span class="token operator">/</span><span class="token operator">></span>                <span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string">"hidden"</span> id<span class="token operator">=</span><span class="token string">"md5_password"</span> name<span class="token operator">=</span><span class="token string">"password"</span><span class="token operator">/</span><span class="token operator">></span> <span class="token comment" spellcheck="true">//设置真实密码隐藏</span>            <span class="token operator">&lt;</span><span class="token operator">/</span>td<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>tr<span class="token operator">></span>        <span class="token operator">&lt;</span>tr<span class="token operator">></span>            <span class="token operator">&lt;</span>td<span class="token operator">></span>                <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>点击提交，绑定事件<span class="token operator">--</span><span class="token operator">></span>                <span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string">"submit"</span><span class="token operator">/</span><span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token operator">/</span>td<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>tr<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>form<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>table<span class="token operator">></span>    <span class="token operator">&lt;</span>script<span class="token operator">></span>        <span class="token keyword">function</span> <span class="token function">fn1</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">var</span>                uname<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'username'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                pwd<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'password'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//MD5 算法</span>            md5_pwd<span class="token operator">=</span><span class="token function">md5</span><span class="token punctuation">(</span>pwd<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//true 提交通过  false 提交不通过</span>            <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>body<span class="token operator">></span></code></pre><h1 id="JQuery"><a href="#JQuery" class="headerlink" title="JQuery"></a>JQuery</h1><h2 id="1-javaScript和JQuery的关系"><a href="#1-javaScript和JQuery的关系" class="headerlink" title="1.javaScript和JQuery的关系"></a>1.javaScript和JQuery的关系</h2><ul><li>JQuery里面存在大量的javascript函数</li></ul><blockquote><p>cdn方式 引入JQuery  </p></blockquote><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>JQuery<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>!--cdn方式引入JQuery</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://code.jquery.com/jquery-migrate-1.2.1.min.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>v <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span></code></pre><blockquote><p>项目内部引入</p></blockquote><pre class=" language-html"><code class="language-html"><span class="token comment" spellcheck="true">&lt;!--内部引入--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>../JQuery/jquery-3.5.1.min.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code></pre><p><strong>重点</strong></p><blockquote><pre class=" language-html"><code class="language-html"><span class="token comment" spellcheck="true">&lt;!-- 公式 $(selector).action()  //$代表JQuery  selector就代表css选择器   action代表绑定事件--></span><span class="token comment" spellcheck="true">&lt;!-- id选择器前面是#  类选择器前面是.--></span><span class="token comment" spellcheck="true">&lt;!--文档工具：https://jquery.cuishifeng.cn/ --></span></code></pre></blockquote><ul><li>事件</li></ul><pre class=" language-javascript"><code class="language-javascript"> <span class="token comment" spellcheck="true">// 当网页加载完后，响应事件</span>    <span class="token function">$</span><span class="token punctuation">(</span>document<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ready</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token function">fn1</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true">//简写</span>    <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token function">fn1</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span></code></pre><p>鼠标事件（mouse） ，键盘事件等</p><h2 id="2-操作DOM"><a href="#2-操作DOM" class="headerlink" title="2.操作DOM"></a>2.操作DOM</h2><pre class=" language-javascript"><code class="language-javascript"><span class="token operator">&lt;</span>body<span class="token operator">></span><span class="token operator">&lt;</span>ul id<span class="token operator">=</span><span class="token string">"Java"</span><span class="token operator">></span>    <span class="token operator">&lt;</span>li id<span class="token operator">=</span><span class="token string">"javase"</span><span class="token operator">></span>JavaSE<span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span>    <span class="token operator">&lt;</span>li id<span class="token operator">=</span><span class="token string">"javaee"</span><span class="token operator">></span>JavaEE<span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span>    <span class="token operator">&lt;</span>li id<span class="token operator">=</span><span class="token string">"javame"</span> name<span class="token operator">=</span><span class="token string">"JavaME"</span><span class="token operator">></span>JavaME<span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>ul<span class="token operator">></span><span class="token operator">&lt;</span>script<span class="token operator">></span>    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#Java li[id=javaee]'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             <span class="token comment" spellcheck="true">//取值</span>    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#Java li[name=JavaME]'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token string">'java'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment" spellcheck="true">//设置值</span>    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#Java li[name=JavaME]'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">'color'</span><span class="token punctuation">,</span><span class="token string">'red'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//设置颜色</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>body<span class="token operator">></span></code></pre><blockquote><p>元素的显示和隐藏 本质 <strong>display：none</strong></p></blockquote><pre class=" language-javascript"><code class="language-javascript"><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#Java li[name=JavaME]'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#Java li[name=JavaME]'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">hide</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>未来ajax(); 方法</p>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Gitee使用指南</title>
      <link href="/xy_ang/2020/10/08/git/"/>
      <url>/xy_ang/2020/10/08/git/</url>
      
        <content type="html"><![CDATA[<h2 id="Git远程管理工具"><a href="#Git远程管理工具" class="headerlink" title="Git远程管理工具"></a>Git远程管理工具</h2><p>Git本地有三个工作区域：工作目录，暂存区，资源库          –&gt;&gt;远程仓库      一块共4个</p><h2 id="简易的命令行入门教程"><a href="#简易的命令行入门教程" class="headerlink" title="简易的命令行入门教程"></a>简易的命令行入门教程</h2><p>Git 全局设置:</p><pre class=" language-bash"><code class="language-bash"><span class="token function">git</span> config --global user.name <span class="token string">"HS"</span><span class="token function">git</span> config --global user.email <span class="token string">"1972728214@qq.com"</span></code></pre><p>创建 git 仓库:</p><pre class=" language-bash"><code class="language-bash"><span class="token function">mkdir</span> my-blog_-source<span class="token function">cd</span> my-blog_-source<span class="token function">git</span> init<span class="token function">touch</span> README.md<span class="token function">git</span> add README.md<span class="token function">git</span> commit -m <span class="token string">"first commit"</span><span class="token function">git</span> remote add origin https://gitee.com/xy_ang/my-blog_-source.git<span class="token function">git</span> push -u origin master</code></pre><p>已有仓库?</p><pre class=" language-bash"><code class="language-bash"><span class="token function">cd</span> existing_git_repo<span class="token function">git</span> remote add origin https://gitee.com/xy_ang/my-blog_-source.git<span class="token function">git</span> push -u origin master</code></pre>]]></content>
      
      
      <categories>
          
          <category> 随笔录丶 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Git </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
